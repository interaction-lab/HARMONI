name: buildx

on:
  pull_request:
    branches: develop
  push:
    branches: feature/docker_refactor
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Person to greet"
        # Default value if no value is explicitly provided
        default: "World"
        # Input has to be provided for the workflow to run
        required: true

jobs:
  buildx:
    runs-on: ubuntu-xenial
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          skip-cache: false
          qemu-version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      # Build the images
      - name: Run Buildx
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=false" \
            --file ./dockerfiles/harmoni/kinetic/core/dockerfile \
            --tag harmoniteam/harmoni:kinetic-core

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build \
            --output "type=image,push=true" \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --file ./dockerfiles/harmoni/kinetic/core/dockerfile \
            --tag harmoniteam/harmoni:kinetic-core

      - name: Run Buildx
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --output "type=image,push=false" \
            --file ./dockerfiles/harmoni/noetic/core/dockerfile \
            --tag harmoniteam/harmoni:noetic-core

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build \
            --output "type=image,push=true" \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --file ./dockerfiles/harmoni/noetic/core/dockerfile \
            --tag harmoniteam/harmoni:noetic-core
