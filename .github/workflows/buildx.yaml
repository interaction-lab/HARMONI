name: buildx

on:
  pull_request:
    branches: develop
  # push:
  #   branches: develop
  workflow_dispatch:
    #manual build? (only here for testing)

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      # Build the Kinetic images (excluding linux/arm/v7,linux/arm64 for now)
      - name: Run Buildx
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform linux/amd64 \
            --output "type=image,push=false" \
            --file ./dockerfiles/harmoni/kinetic/core/dockerfile ./dockerfiles/harmoni/kinetic/core \
            --tag harmoniteam/harmoni:kinetic-core \
            --tag harmoniteam/harmoni:kinetic-latest

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --output "type=image,push=true" \
            --platform linux/amd64 \
            --file ./dockerfiles/harmoni/kinetic/core/dockerfile ./dockerfiles/harmoni/kinetic/core \
            --tag harmoniteam/harmoni:kinetic-core \
            --tag harmoniteam/harmoni:kinetic-latest
      - name: Inspect image
        run: |
          docker buildx imagetools inspect harmoniteam/harmoni:kinetic-latest

      # Build the Noetic images
      - name: Run Buildx
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform linux/amd64 \
            --output "type=image,push=false" \
            --file ./dockerfiles/harmoni/noetic/core/dockerfile ./dockerfiles/harmoni/noetic/core \
            --tag harmoniteam/harmoni:noetic-core \
            --tag harmoniteam/harmoni:noetic-latest

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --output "type=image,push=true" \
            --platform linux/amd64 \
            --file ./dockerfiles/harmoni/noetic/core/dockerfile ./dockerfiles/harmoni/noetic/core \
            --tag harmoniteam/harmoni:noetic-core \
            --tag harmoniteam/harmoni:noetic-latest
      - name: Inspect image
        run: |
          docker buildx imagetools inspect harmoniteam/harmoni:noetic-latest
