FROM ubuntu:xenial

# ==================================================================
# Abstractions for apt installation
RUN \
    apt-get update -y && apt-get upgrade -y \
    && apt-get install -y \
    software-properties-common \
    apt-utils \
    && \
    APT_INSTALL="apt-get install -y --no-install-recommends" && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
    # BUILD TOOLS
    build-essential \
    ca-certificates \
    # DOWNLOAD TOOLS
    curl \
    # COMPILERS
    g++ \
    cmake \
    # VERSION CONTROL
    git \
    vlc \
    # python-keybinder \
    # python-notify \
    # PYAUDIO
    portaudio19-dev libportaudio2 libportaudiocpp0\
    ffmpeg libav-tools \
    # GRAPHICS UTILS
    libcanberra-gtk-module \
    libgl1-mesa-glx \
    libgl1-mesa-dri \
    mesa-utils \
    && sed -i 's/geteuid/getppid/' /usr/bin/vlc \
    && rm -rf /var/lib/apt/lists/* 


# ==================================================================
# Setup Python3.6 with pip, virtualenv
RUN \
    APT_INSTALL="apt-get install -y --no-install-recommends" \
    && add-apt-repository -y ppa:deadsnakes/ppa \
    && apt-get update -y && apt-get upgrade -y \
    && apt-get install -y \
    && DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
    python3.6 \
    python3.6-dev \
    python3-pip \
    # python3-virtualenv \
    # ROS
    python3-yaml \
    && python3.6 -m pip install --upgrade pip \
    && python3.6 -m pip install setuptools \
    && python3.6 -m pip install \
    pyaudio \
    # ROS
    pyaml \
    empy \
    rospkg \
    catkin_pkg \
    catkin_tools \
    # AWS
    boto3 \
    awscli \
    # DATA SCIENCE TOOLS
    # dill \
    # requests \
    # schedule \
    # freezegun \
    # func_timeout \
    # datetimerange \
    && python3.6 -m pip install --ignore-installed pyyaml \
    && rm -rf /var/lib/apt/lists/* 


############################################################
############################################################
############################################################


# ==================================================================
# install packages
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    && rm -rf /var/lib/apt/lists/*


# ==================================================================
# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros1-latest.list

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# ros kinetic setup
ENV ROS_DISTRO kinetic

# install ros packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-kinetic-ros-core=1.3.2-0* \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    && rm -rf /var/lib/apt/lists/*


# ==================================================================
# bootstrap rosdep
RUN rosdep init && \
    rosdep update --rosdistro $ROS_DISTRO

# install ros packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-$ROS_DISTRO-desktop-full=1.3.2-0* \
    ros-$ROS_DISTRO-rosbridge-server \
    && \
    # PYTHON INSTALLS
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python && \
    PIP_INSTALL="python3 -m pip --no-cache-dir install --upgrade" && \
    $PIP_INSTALL \
    numpy \
    rospkg \
    catkin_pkg \
    catkin_tools \
    && rm -rf /var/lib/apt/lists/* 


############################################################
############################################################
############################################################


# ==================================================================
# harmoni packages
# ------------------------------------------------------------------
RUN APT_INSTALL="apt-get install -y --no-install-recommends" && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
    nodejs \
    npm \
    luakit \ 
    libboost-all-dev \
    libgstreamer1.0-0 gstreamer1.0-dev gstreamer1.0-tools gstreamer1.0-doc \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-pulseaudio \
    libgstreamer-plugins-base1.0-dev \
    && \
    npm install http-server -g && \
    ln -s /usr/bin/nodejs /usr/bin/node \
    && \
    PIP_INSTALL="python3.6 -m pip --no-cache-dir install --upgrade" && \
    $PIP_INSTALL \
    packaging==19.1 \
    soundfile \
    dlib \
    imutils \
    google-cloud-speech \
    dialogflow \
    google-api-python-client \
    opencv-python \
    --force-reinstall defusedxml \
    && \
    # ==================================================================
    # install ros packages for harmoni
    # ------------------------------------------------------------------
    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
    ros-$ROS_DISTRO-rosbridge-server \
    ros-$ROS_DISTRO-audio-common \
    ros-$ROS_DISTRO-dynamixel-msgs \
    build-essential \
    && \
    rm -rf /var/lib/apt/lists/* /tmp/*




ENV ROS_WS /root/harmoni_catkin_ws
RUN mkdir -p $ROS_WS/src
WORKDIR $ROS_WS

RUN git -C src clone \
    -b develop \
    https://github.com/interaction-lab/HARMONI.git 

RUN git -C src clone \
    -b kinetic \
    https://github.com/ros-perception/vision_opencv.git

RUN ln -s /usr/lib/x86_64-linux-gnu/libboost_python-py35.so /usr/lib/x86_64-linux-gnu/libboost_python3.so

RUN git -C src clone \
    -b master \
    https://github.com/ros-drivers/audio_common.git

# ==================================================================
# build ros package source
# ------------------------------------------------------------------
RUN catkin config \
    --extend /opt/ros/$ROS_DISTRO \
    -DPYTHON_EXECUTABLE=/usr/bin/python3.6 \
    -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m \
    -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so \
    && \
    catkin build

RUN mkdir -p /root/local_mount/
RUN ln -s /root/harmoni_catkin_ws/src/HARMONI /root/local_mount/

# ==================================================================
# For convenience add a source script to bashrc and update without clearing
# ------------------------------------------------------------------
RUN \
    echo 'source /setup_script.sh' >> /root/.bashrc \
    && apt-get update -y && apt-get upgrade -y

# setup entrypoint and bash setup script
COPY ./dockerfiles/config/harmoni_entrypoint.sh /
COPY ./dockerfiles/config/setup_script.sh /


ENTRYPOINT ["/harmoni_entrypoint.sh"]
CMD ["bash"]