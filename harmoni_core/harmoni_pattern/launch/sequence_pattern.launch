<!-- This is an example launch file for how a ROS application could use a node -->
<launch>
   
	<arg name="use_pattern_dialogue" default="false"/>
	<arg name="use_pattern_type_dialogue" default="true"/>
	<arg name="use_pattern_multiple_choice" default="false"/>
	<arg name="pattern_name" default="multiple_choice"/>
	<arg name="test" default="false"/>
	<arg name="test_input" default="Hey"/>
	<arg name="test_id" default="default"/>
	<group if="$(arg use_pattern_dialogue)">
			<rosparam file="$(find harmoni_pattern)/config/configuration.yaml"/>
			<param name="test_dialogue" value="$(arg test)"/>
			<param name="test_input_dialogue" value="$(arg test_input)"/>
			<param name="test_id_dialogue" value="$(arg test_id)"/>
			<param name="pattern_name" value="dialogue"/>
			<node pkg="harmoni_pattern" type="sequential_pattern.py" name="harmoni_pattern" output="screen"  args="$(arg test) $(arg test_input) $(arg test_id)"/>
  	</group>
	<group if="$(arg use_pattern_multiple_choice)">
			<rosparam file="$(find harmoni_pattern)/config/configuration.yaml"/>
			<param name="test_multiple_choice" value="$(arg test)"/>
			<param name="test_input_multiple_choice" value="$(arg test_input)"/>
			<param name="test_id_multiple_choice" value="$(arg test_id)"/>
			<param name="pattern_name" value="multiple_choice"/>
			<node pkg="harmoni_pattern" type="sequential_pattern.py" name="harmoni_pattern" output="screen"  args="$(arg test) $(arg test_input) $(arg test_id)"/>
  	</group>
	<group if="$(arg use_pattern_type_dialogue)">
			<rosparam file="$(find harmoni_pattern)/config/configuration.yaml"/>
			<param name="test_type_dialogue" value="$(arg test)"/>
			<param name="test_input_type_dialogue" value="$(arg test_input)"/>
			<param name="test_id_type_dialogue" value="$(arg test_id)"/>
			<param name="pattern_name" value="type_dialogue"/>
			<node pkg="harmoni_pattern" type="sequential_pattern.py" name="harmoni_pattern" output="screen"  args="$(arg test) $(arg test_input) $(arg test_id)"/>
  	</group>


</launch>
