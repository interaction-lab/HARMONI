<!-- This is an example launch file for how a ROS application could use a node -->
<launch>   
	<arg name="use_speaker" default="true"/>
	<arg name="test" default="false"/>
	<arg name="test_input" default="/root/harmoni_catkin_ws/src/HARMONI/harmoni_actuators/harmoni_tts/temp_data/tts.wav"/>
	<arg name="test_id" default="default"/>
	<group if="$(arg use_speaker)">
			<include file="/root/harmoni_catkin_ws/src/audio_common/audio_play/launch/play.launch">
				<arg name="do_timestamp" value="false"/>
				<arg name="format" value="wave"/>
				<arg name="sample_rate" value="22050"/>
			</include>
			<rosparam file="$(find harmoni_speaker)/config/configuration.yaml"/>
			<param name="test" value="$(arg test)"/>
			<param name="test_input" value="$(arg test_input)"/>
			<param name="test_id" value="$(arg test_id)"/>
			<node pkg="harmoni_speaker" type="speaker_service.py" name="harmoni_speaker" output="screen"/>
    </group>
    <!--<include file="$(find audio_play)/launch/play.launch">
        <arg name="do_timestamp" value = "false"/> 
        <arg name="format" value = "wave"/>
    </include>-->
</launch>
