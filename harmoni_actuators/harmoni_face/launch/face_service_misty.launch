<!-- This is an example launch file for how a ROS application could use a node -->
<launch>
    
    <arg name="web_directory_path" value="$(find harmoni_face)/web"/>
    <arg name="port" default="8081"/>
	<arg name="instance_id" default="default"/>
	<param name="instance_id" value="$(arg instance_id)"/>
	<rosparam file="$(find harmoni_face)/config/configuration.yaml"/>
	<rosparam file="$(find harmoni_decision)/config/misty_configuration.yaml"/>
	<node pkg="harmoni_face" type="http_server_runner.py" name="face_http_server" output="screen" args="$(arg web_directory_path) $(arg port)" />
	<node pkg="harmoni_face" type="face_service.py" name="harmoni_face_$(arg instance_id)" output="screen"/>
	<node pkg="harmoni_face" type="misty_caller.py" name="misty_caller" output="screen"  args="$(arg web_directory_path) $(arg port)" />
	<include ns="bridge_face" file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
		<arg name="port" value="9000"/>
	</include>

</launch>