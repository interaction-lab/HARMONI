<launch>
    <arg name="robot_joints" default="qt_robot/joints/state_rad"/>
	<arg name="simulated_joints" default="simulated_joints"/>
    <rosparam file="$(find harmoni_gesture)/config/configuration.yaml" subst_value="True"/>
    <param name="instance_id" value="qt"/>
    <param name="/qt/default_param/path" value ="$(find harmoni_gesture)/data"/>
    <node pkg="harmoni_gesture" type="gesture_service.py" name="harmoni_gesture_qt" output="screen"/>
    <node pkg="harmoni_gesture" type="qt_gesture_interface.py" name="harmoni_gesture_qt_interface" output="screen"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node pkg="harmoni_gesture" type="qt_joint_state_publisher.py" name="robot_joint_state_publisher_qt" output="screen"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <remap from="joint_states" to="$(arg simulated_joints)"/>
    </node>
    <arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />
    <arg name="model" default="$(find harmoni_gesture)/urdf/qt.urdf"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
		<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
	<param name="test_gesture_input" value="{'gesture':'QT/bye', 'timing': 0.5}"/>
    <test test-name="test_gesture" pkg="harmoni_gesture" type="rostest_gesture.py" />
</launch>
