<!-- This is an example launch file for how a ROS application could use a node --> <launch>
	<arg name="use_gesture" default="true"/>
	<arg name="use_simulator" default="true"/>
	<arg name="use_simulator_with_robot" default="false"/>
	<arg name="instance_id" default="qt"/>

	<arg name="robot_joints" default="qt_robot/joints/state_rad"/>
	<arg name="simulated_joints" default="simulated_joints"/>
	
	<group if="$(arg use_gesture)">
			<rosparam file="$(find harmoni_gesture)/config/configuration.yaml" subst_value="True"/>
			<param name="/qt/default_param/path" value ="$(find harmoni_gesture)/data"/>
			<param name="instance_id" value="$(arg instance_id)"/>
			<node pkg="harmoni_gesture" type="gesture_service.py" name="harmoni_gesture_$(arg instance_id)" output="screen"/>
			<node pkg="harmoni_gesture" type="$(arg instance_id)_gesture_interface.py" name="harmoni_gesture_$(arg instance_id)_interface" output="screen"/>
	</group>
	<group if="$(arg use_simulator)">
	<!-- Load the urdf into the parameter server. -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
		<node pkg="harmoni_gesture" type="$(arg instance_id)_joint_state_publisher.py" name="robot_joint_state_publisher_$(arg instance_id)" output="screen"/>
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
			<remap from="joint_states" to="$(arg simulated_joints)"/>
		</node>
		<arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />
		<arg name="model" default="$(find harmoni_gesture)/urdf/$(arg instance_id).urdf"/>
		<param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
		<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
	</group>
	
	<group if="$(arg use_simulator_with_robot)">
	<!-- Load the urdf into the parameter server. -->
		<arg name="model" default="$(find harmoni_gesture)/urdf/$(arg instance_id).urdf"/>
		<arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />
		<param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
			<remap from="joint_states" to="$(arg robot_joints)"/>
		</node>
		<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
	</group>
</launch>
